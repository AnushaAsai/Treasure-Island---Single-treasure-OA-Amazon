public class Main {
    
    public static int minSteps(char[][] grid){
        int[] rowDir = {0,0,-1,1};
        int[] colDir = {-1,1,0,0};
        Queue<Node> queue = new LinkedList<>();
        queue.add(new Node(0,0,0));
        grid[0][0]='V';
        while(!queue.isEmpty()){
            Node curr = queue.poll();
            for(int i=0;i<4;i++){
                int row = curr.x + rowDir[i];
                int col = curr.y + colDir[i];
                if(row>=0 && col>=0 && row<grid[0].length && col<grid[0].length && grid[row][col]!='D' && grid[row][col]!='V'){
                    if(grid[row][col]=='X') return curr.step+1;
                    grid[row][col]='V';
                    queue.add(new Node(row,col,curr.step+1));
                }
            }
        }
        return -1;
    }
    public static class Node{
        int x;
        int y;
        int step;
        
        public Node(int x,int y, int step){
            this.x = x;
            this.y = y;
            this.step = step;
        }
    }
    public static void main(String[] args) {
        char[][] grid = {{'O', 'O', 'O', 'O'},
                         {'D', 'O', 'D', 'O'},
                         {'O', 'O', 'O', 'O'},
                         {'O', 'X', 'D', 'O'}};
        System.out.println(minSteps(grid));
    }
}
